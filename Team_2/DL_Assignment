import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler

df = pd.read_csv("student_subject_scores.csv")
subject_cols = ["Math", "Physics", "Chemistry", "Biology", "Computer_Science", "English"]

X = df[subject_cols].values
scaler = MinMaxScaler()
X_scaled = scaler.fit_transform(X)

y = np.argmax(X_scaled, axis=1)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

model = tf.keras.Sequential([
    tf.keras.layers.Dense(32, activation='relu', input_shape=(6,)),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dense(6, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(X_train, y_train, epochs=50, validation_data=(X_test, y_test))



pred_probs = model.predict(X_scaled)
winners = np.argmax(pred_probs, axis=1)
df["Predicted_Top_Subject"] = [subject_cols[i] for i in winners]


print(df[["Student_ID", "Predicted_Top_Subject"]].head())
